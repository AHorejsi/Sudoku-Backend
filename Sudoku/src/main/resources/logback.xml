<configuration>
    <if condition='property("IS_DEV_ENV").equals("true")'>
        <then>
            <appender name='CONSOLE' class='ch.qos.logback.core.ConsoleAppender'>
                <encoder>
                    <pattern>%d{YYYY-MM-dd HH:mm:ss.SSS} [%thread] %X{call-id} %-5level %logger{36} - %msg%n</pattern>
                </encoder>
            </appender>

            <root>
                <appender-ref ref='CONSOLE' />
            </root>
        </then>
    </if>

    <if condition='property("IS_TEST_ENV").equals("true")'>
        <then>
            <appender name='JSON' class='ch.qos.logback.core.rolling.RollingFileAppender'>
                <rollingPolicy class='ch.qos.logback.core.rolling.TimeBasedRollingPolicy'>
                    <fileNamePattern>logs/logFile.test.%d{yyyy-MM-dd}.log</fileNamePattern>
                </rollingPolicy>

                <encoder class='net.logstash.logback.encoder.LogstashEncoder'>
                    <includeCallerData>true</includeCallerData>

                    <jsonGeneratorDecorator class='net.logstash.logback.decorate.CompositeJsonGeneratorDecorator'>
                        <decorator class='net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator'/>
                    </jsonGeneratorDecorator>
                </encoder>

                <filter class='ch.qos.logback.classic.filter.ThresholdFilter'>
                    <level>INFO</level>
                </filter>
            </appender>

            <appender name='JSON_ASYNC' class='ch.qos.logback.classic.AsyncAppender'>
                <appender-ref ref='JSON' />
            </appender>

            <root>
                <appender-ref ref='JSON_ASYNC' />
            </root>
        </then>
    </if>

    <if condition='property("IS_PROD_ENV").equals("true")'>
        <then>
            <appender name='JSON' class='ch.qos.logback.core.rolling.RollingFileAppender'>
                <rollingPolicy class='ch.qos.logback.core.rolling.TimeBasedRollingPolicy'>
                    <fileNamePattern>logs/logFile.%d{yyyy-MM-dd}.log</fileNamePattern>
                </rollingPolicy>

                <encoder class='net.logstash.logback.encoder.LogstashEncoder'>
                    <jsonGeneratorDecorator class='net.logstash.logback.decorate.CompositeJsonGeneratorDecorator'>
                        <decorator class='net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator'/>
                    </jsonGeneratorDecorator>
                </encoder>

                <filter class='ch.qos.logback.classic.filter.ThresholdFilter'>
                    <level>INFO</level>
                </filter>
            </appender>

            <appender name='JSON_ASYNC' class='ch.qos.logback.classic.AsyncAppender'>
                <appender-ref ref='JSON' />
            </appender>

            <root>
                <appender-ref ref='JSON_ASYNC' />
            </root>
        </then>
    </if>

    <logger name='org.eclipse.jetty' level='INFO'/>
    <logger name='io.netty' level='INFO'/>
</configuration>
